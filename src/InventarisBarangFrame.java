
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ASUS
 */
public class InventarisBarangFrame extends javax.swing.JFrame {

    /**
     * Creates new form InventarisBarangFrame
     */
    public InventarisBarangFrame() {
        initComponents();
        this.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);

        updateBarangTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Barang"));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 200));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/add-folder.png"))); // NOI18N
        jButton1.setText("Tambah Barang");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/filter.png"))); // NOI18N
        jButton2.setText("Filter Barang");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/undo-alt.png"))); // NOI18N
        jButton3.setText("Reset Filter");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Membuat objek Barang kosong untuk Create
        Barang barangBaru = new Barang();

        // Tampilkan dialog Edit dengan mode Create
        EditBarangDialog dialog = new EditBarangDialog(this, barangBaru, true); // true = Create mode
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FilterBarangDialog filterDialog = new FilterBarangDialog(this);
        filterDialog.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        updateBarangTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    public void updateBarangTable() {
        try {
            List<Barang> daftarBarang = BarangDatabaseHelper.bacaSemuaBarang();
            updateBarangTable(daftarBarang);
        } catch (SQLException ex) {
            Logger.getLogger(InventarisBarangFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void updateBarangTable(List<Barang> daftarBarang) {
        // Data barang ditambah kolom nomor urut dan ID
            Object[][] data = new Object[daftarBarang.size()][9];  // 9 kolom: No, Nama, Jenis, Harga, Stok, Lokasi Penyimpanan, Edit, Delete, ID
            populateDataBarang(daftarBarang, data);

            // Nama kolom
            String[] columnNames = {"No", "Nama", "Jenis", "Harga", "Stok", "Lokasi Penyimpanan", "Action (Edit)", "Action (Delete)", "ID"};

            // Membuat model tabel
            DefaultTableModel model = createTableModel(data, columnNames);
            jTable1.setModel(model);
            jTable1.setRowHeight(25);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            // Menyembunyikan kolom ID
            TableColumnModel columnModel = jTable1.getColumnModel();
            columnModel.getColumn(8).setMinWidth(0);  // Menyembunyikan kolom ID
            columnModel.getColumn(8).setMaxWidth(0);  // Menyembunyikan kolom ID
            columnModel.getColumn(8).setWidth(0);    // Menyembunyikan kolom ID

            // Menambahkan Tombol Edit dan Delete
            addButtonColumnEdit();
            addButtonColumnDelete();
    }

    // Memasukkan data barang ke dalam array
    private void populateDataBarang(List<Barang> daftarBarang, Object[][] data) {
        NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(Locale.of("in", "ID"));

        for (int i = 0; i < daftarBarang.size(); i++) {
            Barang barang = daftarBarang.get(i);
            data[i][0] = i + 1;  // Menambahkan nomor urut
            data[i][1] = barang.getNama();
            data[i][2] = barang.getJenis();
            data[i][3] = currencyFormatter.format(barang.getHarga());
            data[i][4] = barang.getStok();
            data[i][5] = barang.getLokasiPenyimpanan();
            data[i][6] = "Edit";  // Tombol Edit
            data[i][7] = "Delete";  // Tombol Delete
            data[i][8] = barang.getId();  // ID
        }
    }

    // Membuat DefaultTableModel
    private DefaultTableModel createTableModel(Object[][] data, String[] columnNames) {
        return new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column >= 6;  // Hanya kolom Edit dan Delete yang bisa diedit
            }
        };
    }

    // Menambahkan tombol Edit
    private void addButtonColumnEdit() {
        InventarisBarangFrame frame = this;
        new ButtonColumn(jTable1, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = jTable1.getSelectedRow();
                if (row >= 0) {
                    int idBarang = (int) jTable1.getValueAt(row, 8); // ID ada di kolom ke-8
                    try {
                        Barang barang = BarangDatabaseHelper.bacaBarang(idBarang).get();
                        EditBarangDialog dialog = new EditBarangDialog(frame, barang, false);  // False = Edit
                        dialog.setVisible(true);
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat membaca data barang: " + ex.getMessage());
                    }
                }
            }
        }, 6);  // Kolom ke-6 (Edit)
    }

    // Menambahkan tombol Delete
    private void addButtonColumnDelete() {
        InventarisBarangFrame frame = this;
        new ButtonColumn(jTable1, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = jTable1.getSelectedRow();
                int idBarang = (int) jTable1.getValueAt(row, 8); // ID ada di kolom ke-8

                int confirmation = JOptionPane.showConfirmDialog(
                        frame,
                        "Apakah Anda yakin ingin menghapus barang dengan ID: " + idBarang + "?",
                        "Konfirmasi Hapus",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE
                );

                if (confirmation == JOptionPane.YES_OPTION) {
                    try {
                        Barang barang = BarangDatabaseHelper.bacaBarang(idBarang).get();
                        BarangDatabaseHelper.hapusBarang(barang);  // Menghapus barang

                        JOptionPane.showMessageDialog(null, "Barang berhasil dihapus!");
                        frame.updateBarangTable();  // Update tabel
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menghapus barang: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }, 7);  // Kolom ke-7 (Delete)
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventarisBarangFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventarisBarangFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventarisBarangFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventarisBarangFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventarisBarangFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
